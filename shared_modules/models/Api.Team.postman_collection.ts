// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface APITeamPostmanCollection {
  info: Info
  item: APITeamPostmanCollectionItem[]
  auth: APITeamPostmanCollectionAuth
  event: Event[]
}

export interface APITeamPostmanCollectionAuth {
  type: AuthType
  oauth2: Oauth2[]
}

export interface Oauth2 {
  key: string
  value: string
  type: Oauth2Type
  name?: Name
}

export enum Name {
  ContentType = "Content-Type"
}

export enum Oauth2Type {
  String = "string",
  Text = "text"
}

export enum AuthType {
  Basic = "basic",
  Bearer = "bearer",
  Oauth2 = "oauth2"
}

export interface Event {
  listen: string
  script: Script
}

export interface Script {
  id: string
  type: string
  exec: string[]
}

export interface Info {
  _postman_id: string
  name: string
  schema: string
}

export interface APITeamPostmanCollectionItem {
  name: string
  item: ItemItem[]
  event?: Event[]
}

export interface ItemItem {
  // name: string ---> This property must remove o comment to work well
  request: Request
  response: any[]
  protocolProfileBehavior?: ProtocolProfileBehavior
  event?: Event[]
}

export interface ProtocolProfileBehavior {
  disableBodyPruning: boolean
}

export interface Request {
  auth?: RequestAuth
  method: Method
  header: Oauth2[]
  body: Body
  url: URL
}

export interface RequestAuth {
  type: AuthType
  bearer?: Oauth2[]
  basic?: Oauth2[]
  oauth2?: Oauth2[]
}

export interface Body {
  mode: Mode
  raw?: string
  urlencoded?: Oauth2[]
}

export enum Mode {
  Raw = "raw",
  Urlencoded = "urlencoded"
}

export enum Method {
  Delete = "DELETE",
  Get = "GET",
  Post = "POST",
  Put = "PUT"
}

export interface URL {
  raw: string
  host: Host[]
  path: string[]
}

export enum Host {
  URL = "{{url}}"
}
